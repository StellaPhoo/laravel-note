git config --global user.name “[username]” 
	set a name that is identifiable for credit when review version history
git config --global user.email “[email]” 
	set an email address that will be associated with each history marker
git init
	initialize an existing directory as a Git repository
git status	
	show modified files in working directory, staged for your next commit
git add [file]
	add a file as it looks now to next commit (stage)
git restore --staged [file]
	unstages previously staged content
git restore [file]
	restore files in the working tree from either the index or another commit.
git clean -f
	remove untracked files from the working tree
git clean -fd
	remove untracked directories in addition to untracked files.
git commit -m “message”
	commit staged content as a new commit snapshot
git log
	show all commits in the current branch’s history
git branch
	list branches
git branch [branch-name]
	create a new branch at the current commit
git checkout
	switch to another branch and check it out into working directory
git push -u [alias] [branch]
	transmit local branch commits to the remote repository branch
git remote add [alias] [url]
	add a git URL as an alias
git clone [url]
	clone a repository into a new directory
git pull
	fetch and merge any commits from the tracking remote branch
git branch -D [branch]
	delete a remote branch
git fetch [alias]
	fetch down all the branches from that Git remote
git checkout -b [branch] 
	create a Git branch and checkout in one command
git reset --hard [commit]
	clear staging area, rewrite working tree from specified commit


